{"version":3,"file":"ui-components.js.map","sources":["ng://ui-components/core/element.ts","ng://ui-components/core/color-element.ts","ng://ui-components/button/button.ts","ng://ui-components/button/button.module.ts","ng://ui-components/list/list.ts","ng://ui-components/list/list-item.ts","ng://ui-components/list/list.module.ts","ng://ui-components/card/card.ts","ng://ui-components/card/card.module.ts","ng://ui-components/toolbar/toolbar.ts","ng://ui-components/toolbar/toolbar.module.ts","ng://ui-components/checkbox/checkbox.ts","ng://ui-components/checkbox/checkbox.module.ts"],"sourcesContent":["import { ElementRef } from '@angular/core'\n\nexport class Element {\n\n    private _elementRef: ElementRef\n\n    constructor(elementRef: ElementRef) {\n        this._elementRef = elementRef\n    }\n\n    getHostElement(): any {\n        return this._elementRef.nativeElement\n    }\n\n    _hasHostAttributes(...attributes: string[]) {\n        return attributes.some(attribute => this.getHostElement().hasAttribute(attribute))\n    }\n\n}\n","import { ElementRef } from '@angular/core'\n\nimport { Element } from './element'\n\nexport type ThemeColor = 'primary' | 'secondary' | 'accent' | undefined\n\nexport class ColorElement extends Element {\n\n    private _color: ThemeColor\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef)\n    }\n\n    get color() {\n        return this._color\n    }\n\n    set color(value: ThemeColor) {\n        if (value !== this._color) {\n            if (this._color) {\n                this.getHostElement().classList.remove(`hg-${this._color}`)\n            }\n\n            if (value) {\n                this.getHostElement().classList.add(`hg-${value}`)\n            }\n\n            this._color = value\n        }\n    }\n\n}\n","import {\n    Component,\n    ElementRef,\n    ViewEncapsulation,\n    ChangeDetectionStrategy\n} from '@angular/core'\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion'\n\nimport { ColorElement } from '../core/color-element'\n\nconst HOST_ATTRIBUTES = [\n    'hg-button',\n    'rounded'\n]\n\n@Component({\n    selector: 'button[hg-button]',\n    exportAs: 'Button',\n    templateUrl: './button.html',\n    styleUrls: ['./button.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class Button extends ColorElement {\n\n    private _disabled: boolean\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef)\n\n        for (const attr of HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                this.getHostElement().classList.add(attr)\n            }\n        }    \n        \n    }\n\n    get disabled() {\n        return this._disabled\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value)\n    }\n    \n    focus(): void {\n        this.getHostElement().focus()\n    }\n\n}\n","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\n\nimport {\n    Button\n} from './button'\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        Button\n    ],\n    declarations: [\n        Button\n    ]\n})\nexport class ButtonModule {}\n","import {\n    Component,\n    ElementRef\n} from '@angular/core'\n\nimport { Element } from '../core/element'\n\n@Component({\n    selector: 'hg-list',\n    exportAs: 'List',\n    templateUrl: 'list.html',\n    styleUrls: ['list.scss']\n})\nexport class List extends Element {\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef)\n    }\n\n}\n","import {\n    Component,\n    ElementRef\n} from '@angular/core'\n\nimport { Element } from '../core/element'\n\n@Component({\n    selector: 'hg-list-item',\n    exportAs: 'ListItem',\n    templateUrl: 'list-item.html',\n    styleUrls: ['list.scss']\n})\nexport class ListItem extends Element {\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef)\n    }\n\n}\n","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\n\nimport {\n    List\n} from './list'\n\nimport { \n    ListItem\n} from './list-item'\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        List,\n        ListItem\n    ],\n    declarations: [\n        List,\n        ListItem\n    ]\n})\nexport class ListModule {}\n","import {\n    Component,\n    ElementRef\n} from '@angular/core'\n\n\n@Component({\n    selector: 'hg-card',\n    exportAs: 'Card',\n    templateUrl: 'card.html',\n    styleUrls: ['card.scss']\n})\nexport class Card {\n\n    constructor(elementRef: ElementRef) {\n\n    }\n\n}\n","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\n\nimport {\n    Card\n} from './card'\n\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        Card\n    ],\n    declarations: [\n        Card\n    ]\n})\nexport class CardModule {}\n","import {\n    Component,\n    ElementRef,\n    ViewEncapsulation,\n    ChangeDetectionStrategy\n} from '@angular/core'\n\nimport { ColorElement } from '../core/color-element'\n\n@Component({\n    selector: 'hg-toolbar',\n    exportAs: 'Toolbar',\n    templateUrl: './toolbar.html',\n    styleUrls: ['./toolbar.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color']\n})\nexport class Toolbar extends ColorElement {\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef)\n    }\n\n}\n","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\n\nimport {\n    Toolbar\n} from './toolbar'\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        Toolbar\n    ],\n    declarations: [\n        Toolbar\n    ]\n})\nexport class ToolbarModule {}\n","import {\n    Component,\n    ElementRef,\n    ChangeDetectorRef,\n    Output,\n    EventEmitter,\n    forwardRef\n} from '@angular/core'\n\nimport { FocusMonitor } from '@angular/cdk/a11y'\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms'\n\nimport { ColorElement } from '../core/color-element'\n\nexport enum TransitionCheckState {\n    Init,\n    Checked,\n    Unchecked\n}\n\nexport class CheckboxChangeEvent {\n    source: Checkbox\n    checked: boolean\n}\n\nexport const CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Checkbox),\n    multi: true\n}\n\n@Component({\n    selector: 'hg-checkbox',\n    exportAs: 'Checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.scss'],\n    inputs: ['checked'],\n    providers: [CHECKBOX_CONTROL_VALUE_ACCESSOR]\n})\nexport class Checkbox extends ColorElement implements ControlValueAccessor {\n\n    private _checked: boolean = false\n\n    private _changeDetectorRef: ChangeDetectorRef\n    private _focusMonitor: FocusMonitor\n    \n    @Output() \n    readonly change: EventEmitter<CheckboxChangeEvent> = new EventEmitter<CheckboxChangeEvent>()\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {}\n    private _onTouched: () => any = () => {}\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    constructor(\n        changeDetectorRef: ChangeDetectorRef,\n        focusMonitor: FocusMonitor,\n        elementRef: ElementRef\n    ) {\n    \n        super(elementRef)\n\n        this._changeDetectorRef = changeDetectorRef\n        this._focusMonitor = focusMonitor\n    }\n\n    get checked(): boolean {\n        return this._checked\n    }\n\n    set checked(value: boolean) {\n        if (value != this._checked) {\n            this._checked = value\n            this._changeDetectorRef.markForCheck()\n        }\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn\n    }\n    \n    registerOnTouched(fn: any) {\n        this._onTouched = fn\n    }\n\n    _onInputClick(event: Event) {\n        event.stopPropagation()\n\n        this.toggle()\n\n        this._transitionCheckState(\n            this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked\n        )\n\n        this._emitChangeEvent()\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation()\n    }\n\n    toggle() {\n        this._checked = !this._checked   \n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState\n        \n        if (oldState === newState) {\n            return\n        }\n\n        this._currentCheckState = newState\n    }\n\n    private _emitChangeEvent() {\n        const event = new CheckboxChangeEvent()\n        event.source = this\n        event.checked = this._checked\n\n        this._controlValueAccessorChangeFn(this.checked)\n        this.change.emit(event)\n    }\n\n}\n","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\n\nimport {\n    Checkbox\n} from './checkbox'\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        Checkbox\n    ],\n    declarations: [\n        Checkbox\n    ]\n})\nexport class CheckboxModule {}\n"],"names":[],"mappings":"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"}
